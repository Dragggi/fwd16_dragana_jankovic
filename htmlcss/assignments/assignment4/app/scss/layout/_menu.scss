$breakpoints: (
  'small':  ( min-width:  30.000em ),
  'medium': ( min-width:  48.000em ),
  'large':  ( min-width: 62.000em ),
  'wide':  ( min-width: 75.000em )
) !default;

@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

.flex-nav {

ul {
    

    list-style: none;
    margin: 0; 
    padding: 0;
    display: flex;
    flex-wrap: wrap;
    
    }

a {
    width: 100%;
    text-align: center;
    background: #000; 
background: rgba(0, 0, 0, 0.2); 
transition: all 0.5s;
}


}

.social {
    display: flex;
}

.flex-nav ul li a:hover {
  background: rgba(0, 0, 0, 0.5); 
}

/*flex*/

.flex-nav li {   
    flex-basis: 100%;
}

.social li {    
    flex: 1 1 25%;
    
}

.flex-nav li a {  
    flex: 1 1 25%;
    }


@include respond-to('large'){
     .flex-nav li {   
     flex: 3;
 }
 .flex-nav, .social { 
     flex: 1;
}
